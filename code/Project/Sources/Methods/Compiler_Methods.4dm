//%attributes = {"invisible":true}
C_OBJECT:C1216(doc_buildClass_; $0)
C_OBJECT:C1216(doc_buildClass_; $1)
C_OBJECT:C1216(doc_buildClass_; $2)
C_OBJECT:C1216(doc_findFiles_; $0)
C_TEXT:C284(doc_findFiles_; $1)
C_OBJECT:C1216(doc_parseCommonTags_; $1)
C_OBJECT:C1216(doc_parseCommonTags_; $2)
C_BOOLEAN:C305(doc_parseTag_; $0)
C_TEXT:C284(doc_parseTag_; $1)
C_TEXT:C284(doc_parseTag_; $2)
C_OBJECT:C1216(doc_parseTag_; $3)
C_BOOLEAN:C305(doc_parseTag_; $4)
C_OBJECT:C1216(except_addException_; $1)
C_OBJECT:C1216(except_assert; $0)
C_BOOLEAN:C305(except_assert; $1)
C_TEXT:C284(except_assert; $2)
C_TEXT:C284(except_assert; $3)
C_BOOLEAN:C305(except_catch; $0)
C_POINTER:C301(except_catch; $1)
C_COLLECTION:C1488(except_getExceptions_; $0)
C_BOOLEAN:C305(except_hasExceptions; $0)
C_OBJECT:C1216(except_hasExceptions; $1)
C_OBJECT:C1216(except_throw; $0)
C_TEXT:C284(except_throw; $1)
C_TEXT:C284(except_throw; $2)
C_OBJECT:C1216(except_trapErrors; $0)
C_BOOLEAN:C305(except_try; $0)
C_OBJECT:C1216(except_try; $1)
C_POINTER:C301(except_try; $2)
C_OBJECT:C1216(phone_createFormat; $0)
C_REAL:C285(phone_createFormat; $1)
C_TEXT:C284(phone_createFormat; $2)
C_TEXT:C284(phone_createFormat; $3)
C_TEXT:C284(phone_createFormat; $4)
C_TEXT:C284(phone_createFormat; $5)
C_TEXT:C284(phone_createFormat; $6)
C_VARIANT:C1683(template_params; $1)
C_VARIANT:C1683(template_params; $2)
C_VARIANT:C1683(template_params; $3)
C_VARIANT:C1683(template_params; $4)
C_VARIANT:C1683(template_params; $5)
C_OBJECT:C1216(test_ut_child; $0)
C_REAL:C285(utils_countParams; $1)
C_LONGINT:C283(utils_countParams; $2)
C_OBJECT:C1216(utils_getCheckFunc_; $0)
C_BOOLEAN:C305(utils_getCheckFunc_; $1)
C_POINTER:C301(utils_getCheckFunc_; $2)
C_VARIANT:C1683(utils_getCheckFunc_; $3)
C_BOOLEAN:C305(utils_getCheckFunc_; $4)
C_REAL:C285(utils_getCheckFunc_; $5)
C_OBJECT:C1216(utils_getMethodCaller; $0)
C_TEXT:C284(utils_getMethodCaller; $1)
C_VARIANT:C1683(utils_getObjectValue; $0)
C_OBJECT:C1216(utils_getObjectValue; $1)
C_TEXT:C284(utils_getObjectValue; $2)
C_VARIANT:C1683(utils_getObjectValue; $3)
C_VARIANT:C1683(utils_getObjectValue; $4)
C_VARIANT:C1683(utils_getObjectValue; $5)
C_VARIANT:C1683(utils_getOptionValue; $0)
C_VARIANT:C1683(utils_getOptionValue; $1)
C_VARIANT:C1683(utils_getOptionValue; $2)
C_VARIANT:C1683(utils_getOptionValue; $3)
C_LONGINT:C283(utils_getOptionValue; $4)
C_TEXT:C284(utils_getPointerDisplayName; $0)
C_POINTER:C301(utils_getPointerDisplayName; $1)
C_VARIANT:C1683(utils_getRequireValue; $0)
C_VARIANT:C1683(utils_getRequireValue; $1)
C_VARIANT:C1683(utils_getRequireValue; $2)
C_LONGINT:C283(utils_getRequireValue; $3)
C_BOOLEAN:C305(utils_lazyAnd; $0)
C_OBJECT:C1216(utils_lazyAnd; $1)
C_OBJECT:C1216(utils_lazyAnd; $2)
C_OBJECT:C1216(utils_lazyAnd; $3)
C_OBJECT:C1216(utils_lazyAnd; $4)
C_BOOLEAN:C305(utils_lazyOr; $0)
C_OBJECT:C1216(utils_lazyOr; $1)
C_OBJECT:C1216(utils_lazyOr; $2)
C_OBJECT:C1216(utils_lazyOr; $3)
C_OBJECT:C1216(utils_lazyOr; $4)
C_VARIANT:C1683(utils_saveToStorage; $1)
C_TEXT:C284(utils_saveToStorage; $2)
C_OBJECT:C1216(utils_saveToStorage; $3)
C_LONGINT:C283(param_method1; $1)
C_OBJECT:C1216(param_method1; $2)

//doc_outputBadge_
C_TEXT:C284(doc_outputBadge_; $0)
C_TEXT:C284(doc_outputBadge_; $1)
C_TEXT:C284(doc_outputBadge_; $2)
C_TEXT:C284(doc_outputBadge_; $3)

//doc_outputBody_
C_TEXT:C284(doc_outputBody_; $0)
C_TEXT:C284(doc_outputBody_; $1)

//doc_outputClass_
C_OBJECT:C1216(doc_outputClass_; $1)

//doc_outputHeader_
C_TEXT:C284(doc_outputHeader_; $0)
C_TEXT:C284(doc_outputHeader_; $1)

//param_method2
C_POINTER:C301(param_method2; $1)
C_VARIANT:C1683(except_try; ${3})
C_OBJECT:C1216(utils_lazyAnd; ${1})
C_OBJECT:C1216(utils_lazyOr; ${1})