//%attributes = {"invisible":true}
C_BOOLEAN:C305(doc_buildValue_; $0)
C_OBJECT:C1216(doc_buildValue_; $1)
C_OBJECT:C1216(doc_buildValue_; $2)
C_LONGINT:C283(doc_demo; ${4})
C_TEXT:C284(doc_demo; $1)
C_REAL:C285(doc_demo; $2)
C_OBJECT:C1216(doc_demo; $3)
C_OBJECT:C1216(doc_findFiles_; $0)
C_TEXT:C284(doc_findFiles_; $1)
C_TEXT:C284(doc_outputBadge_; $0)
C_TEXT:C284(doc_outputBadge_; $1)
C_TEXT:C284(doc_outputBadge_; $2)
C_TEXT:C284(doc_outputBadge_; $3)
C_COLLECTION:C1488(doc_splitLines; $0)
C_OBJECT:C1216(doc_splitLines; $1)
C_OBJECT:C1216(doc_splitValueType_; $0)
C_TEXT:C284(doc_splitValueType_; $1)
C_BOOLEAN:C305(doc_splitValueType_; $2)
C_OBJECT:C1216(except_addException_; $1)
C_OBJECT:C1216(except_assert; $0)
C_BOOLEAN:C305(except_assert; $1)
C_TEXT:C284(except_assert; $2)
C_TEXT:C284(except_assert; $3)
C_BOOLEAN:C305(except_catch; $0)
C_POINTER:C301(except_catch; $1)
C_COLLECTION:C1488(except_getExceptions_; $0)
C_BOOLEAN:C305(except_hasExceptions; $0)
C_OBJECT:C1216(except_hasExceptions; $1)
C_OBJECT:C1216(except_throw; $0)
C_TEXT:C284(except_throw; $1)
C_TEXT:C284(except_throw; $2)
C_OBJECT:C1216(except_trapErrors; $0)
C_BOOLEAN:C305(except_try; $0)
C_VARIANT:C1683(except_try; ${4})
C_OBJECT:C1216(except_try; $1)
C_POINTER:C301(except_try; $2)
C_POINTER:C301(except_try; $3)
C_OBJECT:C1216(phone_createFormat; $0)
C_REAL:C285(phone_createFormat; $1)
C_TEXT:C284(phone_createFormat; $2)
C_TEXT:C284(phone_createFormat; $3)
C_TEXT:C284(phone_createFormat; $4)
C_TEXT:C284(phone_createFormat; $5)
C_TEXT:C284(phone_createFormat; $6)
C_OBJECT:C1216(test_param; $0)
C_TEXT:C284(test_param; $1)
C_LONGINT:C283(test_param; $2)
C_VARIANT:C1683(test_param; $3)
C_VARIANT:C1683(test_param; $4)
C_LONGINT:C283(test_param; $5)
C_OBJECT:C1216(test_ut_child; $0)
C_VARIANT:C1683(utils_assertParameter; $0)
C_VARIANT:C1683(utils_assertParameter; $1)
C_POINTER:C301(utils_assertParameter; $2)
C_LONGINT:C283(utils_assertParameter; $3)
C_VARIANT:C1683(utils_assertParameter; $4)
C_REAL:C285(utils_assertParameterCount; $1)
C_LONGINT:C283(utils_assertParameterCount; $2)
C_OBJECT:C1216(utils_getMethodCaller; $0)
C_TEXT:C284(utils_getMethodCaller; $1)
C_TEXT:C284(utils_getPointerDisplayName; $0)
C_POINTER:C301(utils_getPointerDisplayName; $1)
C_VARIANT:C1683(utils_getValueFromObject; $0)
C_TEXT:C284(utils_getValueFromObject; ${3})
C_OBJECT:C1216(utils_getValueFromObject; $1)
C_VARIANT:C1683(utils_getValueFromObject; $2)
C_BOOLEAN:C305(utils_lazyAnd; $0)
C_OBJECT:C1216(utils_lazyAnd; ${1})
C_BOOLEAN:C305(utils_lazyOr; $0)
C_OBJECT:C1216(utils_lazyOr; ${1})
C_VARIANT:C1683(utils_saveToStorage; $1)
C_TEXT:C284(utils_saveToStorage; $2)
C_OBJECT:C1216(utils_saveToStorage; $3)
C_OBJECT:C1216(utils_setValueToObject; $0)
C_TEXT:C284(utils_setValueToObject; ${3})
C_OBJECT:C1216(utils_setValueToObject; $1)
C_VARIANT:C1683(utils_setValueToObject; $2)

//try_methodWithObject
C_OBJECT:C1216(try_methodWithObject; $1)

//try_methodWithObjectClass
C_OBJECT:C1216(try_methodWithObjectClass; $1)

//try_methodWithText
C_TEXT:C284(try_methodWithText; $1)